France = data.frame(cbind(club_2018_name_France,as.numeric(club_2018_France)))
France_2020 = data.frame(cbind(club_name_France,as.numeric(club_France)))
data_2020 = France_2020 %>% filter(club_name_France %in% c)
data_2018 = France %>% filter(club_2018_name_France %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_France) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_France) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
France_val = paired_test$p.value
c = intersect(club_2018_name_Germany,club_name_Germany)
Germany = data.frame(cbind(club_2018_name_Germany,as.numeric(club_2018_Germany)))
Germany_2020 = data.frame(cbind(club_name_Germany,as.numeric(club_Germany)))
data_2020 = Germany_2020 %>% filter(club_name_Germany %in% c)
data_2018 = Germany %>% filter(club_2018_name_Germany %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Germany) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Germany) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Germany_val = paired_test$p.value
c = intersect(club_2018_name_Greece,club_name_Greece)
Greece = data.frame(cbind(club_2018_name_Greece,as.numeric(club_2018_Greece)))
Greece_2020 = data.frame(cbind(club_name_Greece,as.numeric(club_Greece)))
data_2020 = Greece_2020 %>% filter(club_name_Greece %in% c)
data_2018 = Greece %>% filter(club_2018_name_Greece %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Greece) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Greece) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Greece_val = paired_test$p.value
c = intersect(club_2018_name_Hungary,club_name_Hungary)
Hungary = data.frame(cbind(club_2018_name_Hungary,as.numeric(club_2018_Hungary)))
Hungary_2020 = data.frame(cbind(club_name_Hungary,as.numeric(club_Hungary)))
data_2020 = Hungary_2020 %>% filter(club_name_Hungary %in% c)
data_2018 = Hungary %>% filter(club_2018_name_Hungary %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Hungary) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Hungary) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Hungary_val = paired_test$p.value
c = intersect(club_2018_name_Ireland,club_name_Ireland)
Ireland = data.frame(cbind(club_2018_name_Ireland,as.numeric(club_2018_Ireland)))
Ireland_2020 = data.frame(cbind(club_name_Ireland,as.numeric(club_Ireland)))
data_2020 = Ireland_2020 %>% filter(club_name_Ireland %in% c)
data_2018 = Ireland %>% filter(club_2018_name_Ireland %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Ireland) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Ireland) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Ireland_val = paired_test$p.value
c = intersect(club_2018_name_Italy,club_name_Italy)
Italy = data.frame(cbind(club_2018_name_Italy,as.numeric(club_2018_Italy)))
Italy_2020 = data.frame(cbind(club_name_Italy,as.numeric(club_Italy)))
data_2020 = Italy_2020 %>% filter(club_name_Italy %in% c)
data_2018 = Italy %>% filter(club_2018_name_Italy %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Italy) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Italy) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Italy_val = paired_test$p.value
c = intersect(club_2018_name_Malta,club_name_Malta)
Malta = data.frame(cbind(club_2018_name_Malta,as.numeric(club_2018_Malta)))
Malta_2020 = data.frame(cbind(club_name_Malta,as.numeric(club_Malta)))
data_2020 = Malta_2020 %>% filter(club_name_Malta %in% c)
data_2018 = Malta %>% filter(club_2018_name_Malta %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Malta) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Malta) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Malta_val = paired_test$p.value
c = intersect(club_2018_name_Netherlands,club_name_Netherlands)
Netherlands = data.frame(cbind(club_2018_name_Netherlands,as.numeric(club_2018_Netherlands)))
Netherlands_2020 = data.frame(cbind(club_name_Netherlands,as.numeric(club_Netherlands)))
data_2020 = Netherlands_2020 %>% filter(club_name_Netherlands %in% c)
data_2018 = Netherlands %>% filter(club_2018_name_Netherlands %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Netherlands) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Netherlands) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Netherlands_val = paired_test$p.value
c = intersect(club_2018_name_Poland,club_name_Poland)
Poland = data.frame(cbind(club_2018_name_Poland,as.numeric(club_2018_Poland)))
Poland_2020 = data.frame(cbind(club_name_Poland,as.numeric(club_Poland)))
data_2020 = Poland_2020 %>% filter(club_name_Poland %in% c)
data_2018 = Poland %>% filter(club_2018_name_Poland %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Poland) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Poland) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Poland_val = paired_test$p.value
c = intersect(club_2018_name_Portugal,club_name_Portugal)
Portugal = data.frame(cbind(club_2018_name_Portugal,as.numeric(club_2018_Portugal)))
Portugal_2020 = data.frame(cbind(club_name_Portugal,as.numeric(club_Portugal)))
data_2020 = Portugal_2020 %>% filter(club_name_Portugal %in% c)
data_2018 = Portugal %>% filter(club_2018_name_Portugal %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Portugal) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Portugal) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Portugal_val = paired_test$p.value
c = intersect(club_2018_name_Slovakia,club_name_Slovakia)
Slovakia = data.frame(cbind(club_2018_name_Slovakia,as.numeric(club_2018_Slovakia)))
Slovakia_2020 = data.frame(cbind(club_name_Slovakia,as.numeric(club_Slovakia)))
data_2020 = Slovakia_2020 %>% filter(club_name_Slovakia %in% c)
data_2018 = Slovakia %>% filter(club_2018_name_Slovakia %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Slovakia) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Slovakia) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Slovakia_val = paired_test$p.value
c = intersect(club_2018_name_Spain,club_name_Spain)
Spain = data.frame(cbind(club_2018_name_Spain,as.numeric(club_2018_Spain)))
Spain_2020 = data.frame(cbind(club_name_Spain,as.numeric(club_Spain)))
data_2020 = Spain_2020 %>% filter(club_name_Spain %in% c)
data_2018 = Spain %>% filter(club_2018_name_Spain %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Spain) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Spain) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Spain_val = paired_test$p.value
c = intersect(club_2018_name_Sweden,club_name_Sweden)
Sweden = data.frame(cbind(club_2018_name_Sweden,as.numeric(club_2018_Sweden)))
Sweden_2020 = data.frame(cbind(club_name_Sweden,as.numeric(club_Sweden)))
data_2020 = Sweden_2020 %>% filter(club_name_Sweden %in% c)
data_2018 = Sweden %>% filter(club_2018_name_Sweden %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_Sweden) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_Sweden) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
Sweden_val = paired_test$p.value
c = intersect(club_2018_name_England,club_name_England)
England = data.frame(cbind(club_2018_name_England,as.numeric(club_2018_England)))
England_2020 = data.frame(cbind(club_name_England,as.numeric(club_England)))
data_2020 = England_2020 %>% filter(club_name_England %in% c)
data_2018 = England %>% filter(club_2018_name_England %in% c)
data_2020_sort <- with(data_2020,  data_2020[order(club_name_England) , ])
data_2018_sort <- with(data_2018,  data_2018[order(club_2018_name_England) , ])
paired_test  = t.test(as.numeric(data_2020_sort$V2),as.numeric(data_2018_sort$V2),
alternative = "less", var.equal = FALSE,paired = TRUE)
England_val = paired_test$p.value
--------------------------------------------------------------------------------
pvalue_list = c(England_val,Sweden_val,Spain_val,Slovakia_val,Portugal_val,Poland_val,
Netherlands_val,Malta_val, Italy_val,Ireland_val,Hungary_val,
Greece_val,Germany_val,France_val,Finland_val,Estonia_val,Denmark_val,Cyprus_val,
Croatia_val,Bulgaria_val,austria_val)
land = c("England", "Schweden", "Spanien", "Slowakei", "Portugal" ,"Polen" ,"Niederlande", "Malta",
"Italien", "Irland" ,"Ungarn", "Griechenland", "Deutschland", "Frankreich" ,"Finnland" ,"Estland",
"Dänemark","Zypern", "Kroatien" ,"Bulgarien" ,"Österreich")
pval = data.frame(cbind(land,round(pvalue_list,3)))
pval = pval %>% mutate(pValue = as.numeric(V2), Land = land)
pval = pval %>% select(Land,pValue)
library(gridExtra)
grid.newpage()
grid.table(pval)
pval1 = pval %>% filter(as.numeric(pval$pValue) < 0.05)
tab = ggtexttable(pval, rows = NULL, theme = ttheme("mBlue"))
tab = table_cell_bg(tab, row = 2, column = 2, linewidth = 5,fill="darkblue", color = "darkolivegreen4") %>%
table_cell_font(row = 2, column = 2, face = "italic", color = "white")
tab
tab = table_cell_bg(tab, row = 6, column = 2, linewidth = 5,fill="darkblue", color = "darkolivegreen4") %>%
table_cell_font(row = 6, column = 2, face = "italic", color = "white")
tab
tab = table_cell_bg(tab, row = 8, column = 2, linewidth = 5,fill="darkblue", color = "darkolivegreen4") %>%
table_cell_font(row = 8, column = 2, face = "italic", color = "white")
tab
tab = table_cell_bg(tab, row = 10, column = 2, linewidth = 5,fill="darkblue", color = "darkolivegreen4") %>%
table_cell_font(row = 10, column = 2, face = "italic", color = "white")
tab
tab = table_cell_bg(tab, row = 13, column = 2, linewidth = 5,fill="darkblue", color = "darkolivegreen4") %>%
table_cell_font(row = 13, column = 2, face = "italic", color = "white")
tab
tab = table_cell_bg(tab, row = 15, column = 2, linewidth = 5,fill="darkblue", color = "darkolivegreen4") %>%
table_cell_font(row = 15, column = 2, face = "italic", color = "white")
tab
ggplot(pval, aes(x=land, y= as.numeric(pValue)))  + ylab('p values')+xlab('Land')+
geom_point( color="orange", size=4) +
geom_segment(aes(x=land,
xend=land,
y=0,
yend=as.numeric(pValue)),color="grey") + geom_hline(yintercept = 0.05,linetype="dashed", color = "red")+
labs(title="P Values",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
pvalue_list = c(England_val,Sweden_val,Spain_val,Slovakia_val,Portugal_val,Poland_val,
Netherlands_val,Malta_val, Italy_val,Ireland_val,Hungary_val,
Greece_val,Germany_val,France_val,Finland_val,Estonia_val,Denmark_val,Cyprus_val,
Croatia_val,Bulgaria_val,austria_val)
land = c("England", "Schweden", "Spanien", "Slowakei", "Portugal" ,"Polen" ,"Niederlande", "Malta",
"Italien", "Irland" ,"Ungarn", "Griechenland", "Deutschland", "Frankreich" ,"Finnland" ,"Estland",
"Dänemark","Zypern", "Kroatien" ,"Bulgarien" ,"Österreich")
pval = data.frame(cbind(land,round(pvalue_list,3)))
pval = pval %>% mutate(pValue = as.numeric(V2), Land = land)
pval = pval %>% select(Land,pValue)
ggplot(pval, aes(x=land, y= as.numeric(pValue)))  + ylab('p values')+xlab('Land')+
geom_point( color="orange", size=4) +
geom_segment(aes(x=land,
xend=land,
y=0,
yend=as.numeric(pValue)),color="grey") + geom_hline(yintercept = 0.05,linetype="dashed", color = "red")+
labs(title="P Values",
caption="source: mpg") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
link <- "https://www.soccerstats.com/homeaway.asp?league=germany_2021"
# read table
tab <-
read_html(link) %>%
html_nodes("table#btable") %>%
html_table()
data_germany <- data.frame(tab[3])
data_germany <- select(data_germany,Var.2,Points.Per.Game,Points.Per.Game.1,Home.advantage.1)
data_germany =  data_germany %>% mutate(data_germany,Club = Var.2,"2020/21" = Home.advantage.1)
data_germany <- filter(data_germany,Club!="")
data_germany$`2020/21` = as.numeric(data_germany$`2020/21`)
link <- "https://www.soccerstats.com/homeaway.asp?league=germany_2019"
# read table
tab <-
read_html(link) %>%
html_nodes("table") %>%
html_table()
data_germany_2018 <- data.frame(tab[14])
data_germany_2018 <- select(data_germany_2018,Var.2,Points.Per.Game,Points.Per.Game.1,Home.advantage.1)
data_germany_2018 =  data_germany_2018 %>% mutate(data_germany_2018,Club = Var.2,"2018/19" = Home.advantage.1)
data_germany_2018 <- filter(data_germany_2018,Club!="")
data_germany_2018$`2018/19` = as.numeric(data_germany_2018$`2018/19`)
###############################################################################
home_away_data_germany = select(data_germany, Club,`2020/21` )
home_away_data_2018_germany = select(data_germany_2018, Club,`2018/19`)
home_away_data_germany = filter(home_away_data_germany ,home_away_data_germany$Club %in% home_away_data_2018_germany$Club )
home_away_data_2018_germany =filter(home_away_data_2018_germany ,home_away_data_2018_germany$Club %in% home_away_data_germany$Club)
home_away_data_2018_germany$HomeAdvantage_2018 = as.numeric(home_away_data_2018_germany$HomeAdvantage_2018)
home_away_data_2018_germany
data.m <- melt(home_away_data_2018_germany, id.vars='Club')
data <- melt(home_away_data_germany, id.vars='Club')
df = rbind(data.m,data)
df  =  mutate(df,Jahr = variable)
ggplot(df, aes(x=Club, y= value, fill= Jahr, label ="", width = 0.6)) +
ggtitle("Heimvorteil - Vor und während Corona")  + geom_bar(stat="identity",position = "dodge", color="#e9ecef",alpha=0.6)+scale_fill_manual(values=c("#69b3a2", "#404080"))+
theme(legend.position="bottom")+
theme(axis.text.x = element_text(angle = 90))+
scale_y_continuous(breaks = seq(-0.7, 1, 0.2)) + geom_text(size = 4, position = position_dodge2(width = 0.3), vjust=-0.25) + ylab("Heimvorteil")+xlab('Verein') +
geom_hline(yintercept = mean(home_away_data_2018_germany$`2018/19`), color="#69b3a2",linetype='dashed',size=0.8)+
geom_hline(yintercept = 0,color= "black")+geom_hline(yintercept = mean(home_away_data_germany$`2020/21`),color= "#404080",size=0.8,linetype='dashed')+
geom_text(aes(6,0.90,label = 0.89, hjust = 0.5))+geom_text(aes(6,-0.41,label = -0.41, hjust = 0.5))+
geom_text(aes(13,0.94,label = 0.94, hjust = 0.5))+geom_text(aes(13,-0.17,label = -0.17, hjust = 0.5))
link <- "https://www.soccerstats.com/homeaway.asp?league=england_2021"
# read table
tab <-
read_html(link) %>%
html_nodes("table#btable") %>%
html_table()
data_england <- data.frame(tab[3])
data_england <- select(data_england,Var.2,Points.Per.Game,Points.Per.Game.1,Home.advantage.1)
data_england =  data_england %>% mutate(data_england,Club = Var.2,"2020/21" = Home.advantage.1)
data_england <- filter(data_england,Club!="")
data_england$`2020/21` = as.numeric(data_england$`2020/21`)
home_points_2020 = select(data_england,Var.2,Points.Per.Game)
home_points_2020 = cbind(home_points_2020,'PPS'='Heim')
away_points_2020 = select(data_england,Var.2,Points.Per.Game.1)
away_points_2020 = cbind(away_points_2020,'PPS' = 'Auswärts')
colnames(away_points_2020)[2] <- "Points.Per.Game"
home_away = rbind(home_points_2020,away_points_2020)
ggplot(home_away, aes(fill=PPS, x=Var.2, y=as.numeric(Points.Per.Game))) +
geom_bar(position="stack", stat="identity") + scale_x_discrete(guide = guide_axis(angle = 90))+
scale_fill_viridis(discrete = T) +
ggtitle("Heim vs. Auswärts PPS - 2020") + xlab('Vereine')+ ylab('Punkte pro Spiel')
###############################################################################
#England 2018- home vs away
link <- "https://www.soccerstats.com/homeaway.asp?league=england_2019"
# read table
tab <-
read_html(link) %>%
html_nodes("table") %>%
html_table()
data_england_2018 <- data.frame(tab[14])
data_england_2018 <- select(data_england_2018,X2,X6,X7,X9)
data_england_2018 =  data_england_2018 %>% mutate( Club = X2,"2018/19" = X9)
data_england_2018 <- filter(data_england_2018,Club!="")
data_england_2018$`2018/19` = as.numeric(data_england_2018$`2018/19`)
home_points_2018 = select(data_england_2018,X2,X6)
home_points_2018 = cbind(home_points_2018,'PPS'='Heim ')
away_points_2018 = select(data_england_2018,X2,X7)
away_points_2018 = cbind(away_points_2018,'PPS'='Auswärts')
colnames(away_points_2018)[2] <- "Points.Per.Game"
colnames(home_points_2018)[2] <- "Points.Per.Game"
home_away_2018 = rbind(home_points_2018,away_points_2018)
write.csv(data_england_2018,"C:\\Users\\Aishwarya\\Documents\\dortmun-digital-classes\\Semetser 3\\SportsDataVisualization\\Code\\England_2018.csv", row.names = FALSE)
#Generating stacked bar graphs showing how home vs away PPS vary
ggplot(home_away_2018, aes(fill=PPS, x=X2, y=as.numeric(Points.Per.Game))) +
geom_bar(position="stack", stat="identity") + scale_x_discrete(guide = guide_axis(angle = 90))+
scale_fill_viridis(discrete = T) +
ggtitle("Heim vs. Auswärts PPS - 2018") + xlab('Vereine')+ ylab('Punkte pro Spiel')
###############################################################################
home_away_data_england = select(data_england, Club,`2020/21` )
home_away_data_2018_england = select(data_england_2018, Club,`2018/19`)
home_away_data_england = filter(home_away_data_england ,home_away_data_england$Club %in% home_away_data_2018_england$Club )
home_away_data_2018_england =filter(home_away_data_2018_england ,home_away_data_2018_england$Club %in% home_away_data_england$Club)
home_away_data_2018_england$HomeAdvantage_2018 = as.numeric(home_away_data_2018_england$HomeAdvantage_2018)
home_away_data_2018_england
data.m <- melt(home_away_data_2018_england, id.vars='Club')
data <- melt(home_away_data_england, id.vars='Club')
df = rbind(data.m,data)
df  =  mutate(df,Jahr = variable)
#generating dodge bar plots with home advantage values vs clubs for all premier
#league clubs for years 2018 and 2020
ggplot(df, aes(x=Club, y= value, fill= Jahr, label ="")) +
ggtitle("Heimvorteil - Vor und während Corona")  + geom_bar(stat="identity",position = "dodge", color="#e9ecef",alpha=0.6)+scale_fill_manual(values=c("#69b3a2", "#404080"))+
theme(legend.position="bottom")+
theme(axis.text.x = element_text(angle = 90))+
scale_y_continuous(breaks = seq(-0.7, 1, 0.2)) + geom_text(size = 4, position = position_dodge2(width = 0.3), vjust=-0.25) + ylab("Heimvorteil")+xlab('Verein') +
geom_hline(yintercept = mean(home_away_data_2018_england$`2018/19`), color="#69b3a2",linetype='dashed',size=0.8)+
geom_hline(yintercept = 0,color= "black")+geom_hline(yintercept = mean(home_away_data_england$`2020/21`),color= "#404080",size=0.8,linetype='dashed')+
geom_text(aes(7,0.85,label = 0.85, hjust = 0.5))+geom_text(aes(7,-0.42,label = -0.42, hjust = 0.5))+
geom_text(aes(11,0.31,label = 0.31, hjust = 0.5))+geom_text(aes(11,-0.63,label = -0.63, hjust = 0.5))
library(ggrepel)
library(stringr)
library(dplyr)
library(reshape)
#Link of audience percentage data
link <- 'https://www.transfermarkt.com/premier-league/besucherzahlen/wettbewerb/GB1/saison_id/2020/plus/1'
#loading all tables of the link
tab <-
read_html(link) %>%
html_nodes("table") %>%
html_table()
#selecting required table
data = as.data.frame(tab[4])
data = select(data,Average ,Var.11)
#data cleaning
data = filter(data,Var.11!="")
data$Var.11 = str_replace_all(data$Var.11,"%"," ")
data$Var.11[c(19,20)] = 0
data$Var.11 =  as.numeric(data$Var.11)
#changing club names to maintain uniformity
club_2020_name_England = str_replace_all(club_name_England,'Utd','United')
data$Average = str_replace_all(data$Average,'FC','')
data = arrange(data,data$Average)
HA_england = as.data.frame(cbind(club_England,club_name_England))
club_2020_name_England = str_replace_all(club_2020_name_England,'Brighton','Brighton & Hove Albion')
club_2020_name_England = str_replace_all(club_2020_name_England,'Tottenham','Tottenham Hotspur')
club_2020_name_England = str_replace_all(club_2020_name_England,'West Brom','West Bromwich Albion')
club_2020_name_England = str_replace_all(club_2020_name_England,'Wolverhampton','Wolverhampton Wanderers')
HA_england$club_name_England = str_replace_all(HA_england$club_name_England,' ','')
HA_england  = arrange(as.data.frame(cbind(as.numeric(club_England),club_2020_name_England)),club_2020_name_England)
HA_england_2020 = cbind(HA_england,data$Var.11)
HA_england_2020$club_2020_name_England = str_replace_all(HA_england$club_2020_name_England,' ','')
HA_england_2020 = subset(HA_england_2020,club_2020_name_England != 'Fulham')
#genrating scatter plot which show how home advantage vary with audience percentage
ggplot(HA_england_2020, aes(`data$Var.11`,V1, label = club_2020_name_England)) + geom_point(col = 'red') + geom_text_repel()+
xlab("Auslastung") + ylab("Heimvorteil")
--------------------------------------------------------------------------------
#repeating same for 2018 year
link <- 'https://www.transfermarkt.com/premier-league/besucherzahlen/wettbewerb/GB1/plus/1?saison_id=2018'
tab <-
read_html(link) %>%
html_nodes("table") %>%
html_table()
data = as.data.frame(tab[4])
data = select(data,Average ,Var.11)
data = filter(data,Var.11!="")
data$Var.11 = str_replace_all(data$Var.11,"%"," ")
#data$Var.11[c(19,20)] = 0
data$Var.11 =  as.numeric(data$Var.11)
data$Average = str_replace_all(data$Average,'FC','')
data$Average = str_replace_all(data$Average,'A Bournemouth','Bournemouth')
data$Average = str_replace_all(data$Average,'Huddersfield Town','Huddersfield')
data$Average = str_replace_all(data$Average,' ','')
club_2018_name_England = str_replace_all(club_2018_name_England,'Brighton','Brighton & Hove Albion')
club_2018_name_England = str_replace_all(club_2018_name_England,'Tottenham','Tottenham Hotspur')
club_2018_name_England = str_replace_all(club_2018_name_England,' ','')
club_2018_name_England = str_replace_all(club_2018_name_England,'Utd','United')
data = filter(data,data$Average %in% club_2018_name_England)
data = arrange(data,data$Average)
HA_england  = arrange(as.data.frame(cbind(as.numeric(club_2018_England),club_2018_name_England)),club_2018_name_England)
HA_england = filter(HA_england, HA_england$club_2018_name_England %in% data$Average)
HA_england_2018 = cbind(HA_england,data$Var.11)
HA_england_2018$club_2018_name_England = str_replace_all(HA_england_2018$club_2018_name_England,' ','')
HA_england_2018 = subset(HA_england_2018,club_2018_name_England != 'Fulham')
ggplot(HA_england_2018, aes(HA_england_2018$`data$Var.11`,HA_england_2018$V1, label = HA_england_2018$club_2018_name_England)) + geom_point(col = 'red') + geom_text_repel()+
xlab("Auslastung") + ylab("Heimvorteil")
common_data1 = filter(HA_england_2018, HA_england_2018$club_2018_name_England %in% HA_england_2020$club_2020_name_England)
common_data2  = filter(HA_england_2020, HA_england_2020$club_2020_name_England %in% HA_england_2018$club_2018_name_England)
common_data2 < cbind(common_data2,'2020')
common_data <- cbind(common_data1,common_data2$V1,common_data2$`data$Var.11`)
colnames(common_data1)[2] <- "club"
colnames(common_data2)[2] <- "club"
common_data2['Jahr']='2020'
common_data1['Jahr']='2018'
common_data = rbind(common_data1,common_data2)
common_data$V1 = as.numeric(common_data$V1)
common_data$`data$Var.11` = as.numeric(common_data$`data$Var.11`)
#Plotting both years in same scatter plot
ggplot(common_data, aes(common_data$`data$Var.11`,common_data$V1, label = club, colour = Jahr)) + geom_point()+theme(legend.position = "bottom") + geom_text()+
xlab("Anwesenheitsprozentsatz") + ylab("Heimvorteil") + scale_y_continuous(breaks= seq(-0.80,1.63,.3))
library(ggrepel)
library(stringr)
library(dplyr)
library(reshape)
#Link of audience percentage data
link <- 'https://www.transfermarkt.com/premier-league/besucherzahlen/wettbewerb/GB1/saison_id/2020/plus/1'
#loading all tables of the link
tab <-
read_html(link) %>%
html_nodes("table") %>%
html_table()
#selecting required table
data = as.data.frame(tab[4])
data = select(data,Average ,Var.11)
#data cleaning
data = filter(data,Var.11!="")
data$Var.11 = str_replace_all(data$Var.11,"%"," ")
data$Var.11[c(19,20)] = 0
data$Var.11 =  as.numeric(data$Var.11)
#changing club names to maintain uniformity
club_2020_name_England = str_replace_all(club_name_England,'Utd','United')
data$Average = str_replace_all(data$Average,'FC','')
data = arrange(data,data$Average)
HA_england = as.data.frame(cbind(club_England,club_name_England))
club_2020_name_England = str_replace_all(club_2020_name_England,'Brighton','Brighton & Hove Albion')
club_2020_name_England = str_replace_all(club_2020_name_England,'Tottenham','Tottenham Hotspur')
club_2020_name_England = str_replace_all(club_2020_name_England,'West Brom','West Bromwich Albion')
club_2020_name_England = str_replace_all(club_2020_name_England,'Wolverhampton','Wolverhampton Wanderers')
HA_england$club_name_England = str_replace_all(HA_england$club_name_England,' ','')
HA_england  = arrange(as.data.frame(cbind(as.numeric(club_England),club_2020_name_England)),club_2020_name_England)
HA_england_2020 = cbind(HA_england,data$Var.11)
HA_england_2020$club_2020_name_England = str_replace_all(HA_england$club_2020_name_England,' ','')
HA_england_2020 = subset(HA_england_2020,club_2020_name_England != 'Fulham')
#genrating scatter plot which show how home advantage vary with audience percentage
ggplot(HA_england_2020, aes(`data$Var.11`,V1, label = club_2020_name_England)) + geom_point(col = 'red') + geom_text_repel()+
xlab("Auslastung") + ylab("Heimvorteil")
link <- 'https://www.transfermarkt.com/premier-league/besucherzahlen/wettbewerb/GB1/plus/1?saison_id=2018'
tab <-
read_html(link) %>%
html_nodes("table") %>%
html_table()
data = as.data.frame(tab[4])
data = select(data,Average ,Var.11)
data = filter(data,Var.11!="")
data$Var.11 = str_replace_all(data$Var.11,"%"," ")
#data$Var.11[c(19,20)] = 0
data$Var.11 =  as.numeric(data$Var.11)
data$Average = str_replace_all(data$Average,'FC','')
data$Average = str_replace_all(data$Average,'A Bournemouth','Bournemouth')
data$Average = str_replace_all(data$Average,'Huddersfield Town','Huddersfield')
data$Average = str_replace_all(data$Average,' ','')
club_2018_name_England = str_replace_all(club_2018_name_England,'Brighton','Brighton & Hove Albion')
club_2018_name_England = str_replace_all(club_2018_name_England,'Tottenham','Tottenham Hotspur')
club_2018_name_England = str_replace_all(club_2018_name_England,' ','')
club_2018_name_England = str_replace_all(club_2018_name_England,'Utd','United')
data = filter(data,data$Average %in% club_2018_name_England)
data = arrange(data,data$Average)
HA_england  = arrange(as.data.frame(cbind(as.numeric(club_2018_England),club_2018_name_England)),club_2018_name_England)
HA_england = filter(HA_england, HA_england$club_2018_name_England %in% data$Average)
HA_england_2018 = cbind(HA_england,data$Var.11)
HA_england_2018$club_2018_name_England = str_replace_all(HA_england_2018$club_2018_name_England,' ','')
HA_england_2018 = subset(HA_england_2018,club_2018_name_England != 'Fulham')
ggplot(HA_england_2018, aes(HA_england_2018$`data$Var.11`,HA_england_2018$V1, label = HA_england_2018$club_2018_name_England)) + geom_point(col = 'red') + geom_text_repel()+
xlab("Auslastung") + ylab("Heimvorteil")
common_data1 = filter(HA_england_2018, HA_england_2018$club_2018_name_England %in% HA_england_2020$club_2020_name_England)
common_data2  = filter(HA_england_2020, HA_england_2020$club_2020_name_England %in% HA_england_2018$club_2018_name_England)
common_data2 < cbind(common_data2,'2020')
common_data <- cbind(common_data1,common_data2$V1,common_data2$`data$Var.11`)
colnames(common_data1)[2] <- "club"
colnames(common_data2)[2] <- "club"
common_data2['Jahr']='2020'
common_data1['Jahr']='2018'
common_data = rbind(common_data1,common_data2)
common_data$V1 = as.numeric(common_data$V1)
common_data$`data$Var.11` = as.numeric(common_data$`data$Var.11`)
ggplot(common_data, aes(common_data$`data$Var.11`,common_data$V1, label = club, colour = Jahr)) + geom_point()+theme(legend.position = "bottom") + geom_text()+
xlab("Anwesenheitsprozentsatz") + ylab("Heimvorteil") + scale_y_continuous(breaks= seq(-0.80,1.63,.3))
library("readxl")
library(RColorBrewer)
library(ggplot2)
library(dplyr)
#loading collected possession data
data <- as.data.frame(read_excel('C:\\Users\\Aishwarya\\Downloads\\posession_buli.xlsx'))
away_18 <- select(data,`18 away`,Team)
away_18 <- cbind(away_18, Jahr = '2018')
away_20 <- select(data,`21 away`,Team)
away_20 <- cbind(away_20, Jahr = '2020')
average_18 <- select(data,`18 average`,Team)
average_18 <- cbind(average_18, Jahr = '2018')
average_20 <- select(data,`21 average`,Team)
average_20 <- cbind(average_20, Jahr = '2020')
colnames(average_18)[1] = 'average'
colnames(average_20)[1] = 'average'
#calculating difference  for both years
diff_20 <- away_20$`21 away` - average_20$average
away_20 <- cbind(away_20, difference = diff_20)
diff_18 <- away_18$`18 away` - average_18$average
away_18 <- cbind(away_18, difference = diff_18)
average <- rbind(average_18,average_20)
colnames(away_18)[1] = 'away'
colnames(away_20)[1] = 'away'
away <- rbind(away_18,away_20)
#plotting barplots with away possesision values
ggplot(away, aes(y= away, x = Team, fill = Jahr)) + geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+ ylab('ein Weg') + xlab('Team')+
theme_minimal()+theme(axis.text.x = element_text(angle = 90))
ggplot(away, aes(y= away, x = Team, fill = Jahr)) + geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+ ylab('ein Weg') + xlab('Team')+
theme_minimal()+theme(axis.text.x = element_text(angle = 90))
#plotting barplots with calculated difference values
ggplot(away_18, aes(y= difference, x = Team)) + geom_bar(stat="identity", position=position_dodge(),fill = '#00AFBB')+
ylab('Unterschied (Ballbesitz Differenz (auswärts-gesamtdurchschnitt))') + xlab('Team')+ ggtitle('Jahr 2018')+
theme_minimal()+theme(axis.text.x = element_text(angle = 90))
ggplot(away_20, aes(y= difference, x = Team)) + geom_bar(stat="identity", position=position_dodge(),fill = '#00AFBB')+
ylab('Ballbesitz Differenz (auswärts-gesamtdurchschnitt)') + xlab('Team')+ggtitle('Jahr 2020')+
theme_minimal()+theme(axis.text.x = element_text(angle = 90))
#plotting both the years (difference values) in same graph
ggplot(away, aes(y= difference, x = Team, fill =Jahr )) + geom_bar(stat="identity", position=position_dodge())+
scale_fill_manual(values=c("#00AFBB", "#E7B800")) + ylab('Ballbesitz Differenz (auswärts-gesamtdurchschnitt)') + xlab('Team')+
theme_minimal()+theme(axis.text.x = element_text(angle = 90))
